{"ast":null,"code":"var _jsxFileName = \"/Users/jasper/Workspace/ReactNative/MyReadsApp/src/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchBooks from './SearchBooks';\nimport * as BooksAPI from './BooksAPI';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: {}\n    };\n\n    this.onTextChange = event => {\n      event.target.value.trim() !== '' ? this.searchBooks(event.target.value.trim()) : this.searchBooks();\n    };\n\n    this.searchBooks = query => {\n      BooksAPI.search(query, 20).then(data => {\n        this.filterBooks(data);\n      });\n    };\n\n    this.filterBooks = newBooks => {\n      const myReads = this.props.myReads;\n\n      for (const index in newBooks) {\n        const book = newBooks[index];\n\n        if (!book.imageLinks) {\n          newBooks.splice(index, 1);\n        }\n\n        for (const myIndex in myReads) {\n          const myRead = myReads[myIndex];\n\n          if (book.id === myRead.id) {\n            newBooks[index] = myRead;\n            break;\n          }\n        }\n      }\n\n      this.setState({\n        books: newBooks\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.searchBooks();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-books-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"close-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Search by title or author\",\n      onChange: event => this.onTextChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(SearchBooks, {\n      books: this.state.books,\n      listener: this.props.listener,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/jasper/Workspace/ReactNative/MyReadsApp/src/Search.js"],"names":["React","Component","Link","SearchBooks","BooksAPI","Search","state","books","onTextChange","event","target","value","trim","searchBooks","query","search","then","data","filterBooks","newBooks","myReads","props","index","book","imageLinks","splice","myIndex","myRead","id","setState","componentDidMount","render","listener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE7BK,KAF6B,GAErB;AACNC,MAAAA,KAAK,EAAG;AADF,KAFqB;;AAAA,SAM7BC,YAN6B,GAMbC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,OAA8B,EAA/B,GAAqC,KAAKC,WAAL,CAAiBJ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,EAAjB,CAArC,GAAoF,KAAKC,WAAL,EAApF;AACD,KAR4B;;AAAA,SAU7BA,WAV6B,GAUdC,KAAD,IAAW;AACvBV,MAAAA,QAAQ,CAACW,MAAT,CAAgBD,KAAhB,EAAuB,EAAvB,EACGE,IADH,CACSC,IAAD,IAAU;AACf,aAAKC,WAAL,CAAiBD,IAAjB;AACF,OAHD;AAID,KAf4B;;AAAA,SAkB7BC,WAlB6B,GAkBdC,QAAD,IAAc;AAC1B,YAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;;AAEA,WAAI,MAAME,KAAV,IAAmBH,QAAnB,EAA4B;AAC1B,cAAMI,IAAI,GAAGJ,QAAQ,CAACG,KAAD,CAArB;;AAEA,YAAG,CAACC,IAAI,CAACC,UAAT,EAAoB;AAClBL,UAAAA,QAAQ,CAACM,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;AACD;;AAED,aAAI,MAAMI,OAAV,IAAqBN,OAArB,EAA6B;AAC/B,gBAAMO,MAAM,GAAGP,OAAO,CAACM,OAAD,CAAtB;;AACM,cAAGH,IAAI,CAACK,EAAL,KAAYD,MAAM,CAACC,EAAtB,EAAyB;AACvBT,YAAAA,QAAQ,CAACG,KAAD,CAAR,GAAkBK,MAAlB;AACA;AACD;AACJ;AACF;;AACD,WAAKE,QAAL,CAAc;AAACtB,QAAAA,KAAK,EAAGY;AAAT,OAAd;AACD,KArC4B;AAAA;;AAuC7BW,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,WAAL;AACD;;AAEDkB,EAAAA,MAAM,GAAI;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAO,MAAA,WAAW,EAAC,2BAAnB;AAA+C,MAAA,QAAQ,EAAGtB,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,EAKH,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAA/B;AAAsC,MAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWW,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALG,CADF;AASA;;AArD4B;;AAwD/B,eAAe3B,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SearchBooks from './SearchBooks'\nimport * as BooksAPI from './BooksAPI'\n\nclass Search extends Component {\n  \n  state = {\n    books : {}\n  }\n\n  onTextChange = (event) => {\n    (event.target.value.trim() !== '') ? this.searchBooks(event.target.value.trim())  : this.searchBooks()\n  }\n  \n  searchBooks = (query) => {\n    BooksAPI.search(query, 20)\n      .then((data) => {\n      \tthis.filterBooks(data)\n    })\n  }\n\n  // This function to handle the books I currently have in my bookshelf\n  filterBooks = (newBooks) => {\n    const myReads = this.props.myReads;\n    \n    for(const index in newBooks){\n      const book = newBooks[index]\n      \n      if(!book.imageLinks){\n        newBooks.splice(index, 1)\n      }\n      \n      for(const myIndex in myReads){\n\t\t  const myRead = myReads[myIndex]\n          if(book.id === myRead.id){\n            newBooks[index] = myRead\n            break;\n          }\n      }\n    }\n    this.setState({books : newBooks})\n  }\n\n  componentDidMount() {\n    this.searchBooks();\n  }\n\n  render () {\n   return(\n     <div>\n     \t<div className=\"search-books-bar\">\n     \t\t<Link to=\"/\" className=\"close-search\"/>\n     \t\t<input placeholder=\"Search by title or author\" onChange={(event) => this.onTextChange(event)}/>\n     \t</div>\n\t\t<SearchBooks books={this.state.books} listener={this.props.listener}/>\n     </div>\n   \t)\n  }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}