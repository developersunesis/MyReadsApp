{"ast":null,"code":"var _jsxFileName = \"/Users/jasper/Workspace/ReactNative/MyReadsApp/src/BookCard.js\";\nimport React, { Component } from 'react';\n\nclass BookCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.returnEventWithBookId = (listener, event, id) => {\n      listener(event.target.value, id);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          book = _this$props.book,\n          onOptionChanged = _this$props.onOptionChanged;\n    const id = book.id,\n          title = book.title,\n          authors = book.authors,\n          imageLinks = book.imageLinks,\n          shelf = book.shelf,\n          publisher = book.publisher;\n    return React.createElement(\"div\", {\n      className: \"book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"book-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"book-cover\",\n      style: {\n        width: 128,\n        height: 193,\n        backgroundImage: \"url(\".concat(imageLinks.thumbnail, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"book-shelf-changer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: !shelf ? 'none' : shelf,\n      onChange: event => this.returnEventWithBookId(onOptionChanged, event, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"move\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Move to...\"), React.createElement(\"option\", {\n      value: \"currentlyReading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Currently Reading\"), React.createElement(\"option\", {\n      value: \"wantToRead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Want to Read\"), React.createElement(\"option\", {\n      value: \"read\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Read\"), React.createElement(\"option\", {\n      value: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"None\")))), React.createElement(\"div\", {\n      className: \"book-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"book-authors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, // Replace author with publisher if book doesn't have a specific list of authors \n    !authors ? publisher : authors.map((author, index) => React.createElement(\"span\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, author, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default BookCard;","map":{"version":3,"sources":["/Users/jasper/Workspace/ReactNative/MyReadsApp/src/BookCard.js"],"names":["React","Component","BookCard","returnEventWithBookId","listener","event","id","target","value","render","props","book","onOptionChanged","title","authors","imageLinks","shelf","publisher","width","height","backgroundImage","thumbnail","map","author","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE7BE,qBAF6B,GAEL,CAACC,QAAD,EAAWC,KAAX,EAAkBC,EAAlB,KAAyB;AAC7CF,MAAAA,QAAQ,CAACC,KAAK,CAACE,MAAN,CAAaC,KAAd,EAAqBF,EAArB,CAAR;AACH,KAJ4B;AAAA;;AAMhCG,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACIC,IADJ,eACIA,IADJ;AAAA,UACUC,eADV,eACUA,eADV;AAAA,UAGEN,EAHF,GAGsDK,IAHtD,CAGEL,EAHF;AAAA,UAGMO,KAHN,GAGsDF,IAHtD,CAGME,KAHN;AAAA,UAGaC,OAHb,GAGsDH,IAHtD,CAGaG,OAHb;AAAA,UAGsBC,UAHtB,GAGsDJ,IAHtD,CAGsBI,UAHtB;AAAA,UAGkCC,KAHlC,GAGsDL,IAHtD,CAGkCK,KAHlC;AAAA,UAGyCC,SAHzC,GAGsDN,IAHtD,CAGyCM,SAHzC;AAKF,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,GAAtB;AAA2BC,QAAAA,eAAe,gBAASL,UAAU,CAACM,SAApB;AAA1C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAG,CAACL,KAAF,GAAW,MAAX,GAAoBA,KAAnC;AAA0C,MAAA,QAAQ,EAAGX,KAAD,IAAW,KAAKF,qBAAL,CAA2BS,eAA3B,EAA4CP,KAA5C,EAAmDC,EAAnD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CAFA,CADF,EAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BO,KAA7B,CAbF,EAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AACC,KAACC,OAAF,GAAaG,SAAb,GAAyBH,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAoB;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,MAAnB,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAAhC,CAFjB,CAfF,CADF;AAsBN;;AAjC+B;;AAoCjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass BookCard extends Component {\n    \n    returnEventWithBookId = (listener, event, id) => {\n        listener(event.target.value, id)\n    }\n\n\trender() {\n     \tconst { book, onOptionChanged } = this.props\n\n  \t\tconst { id, title, authors, imageLinks, shelf, publisher} = book\n\n        return (\n          <div className=\"book\">\n            <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${imageLinks.thumbnail})` }}></div>\n            <div className=\"book-shelf-changer\">\n              <select value={(!shelf) ? 'none' : shelf} onChange={(event) => this.returnEventWithBookId(onOptionChanged, event, id)}>\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n            </div>\n            <div className=\"book-title\">{title}</div>\n\t\t\t\n            <div className=\"book-authors\">{\n\t\t\t\t// Replace author with publisher if book doesn't have a specific list of authors \n\t\t\t\t(!authors) ? publisher : authors.map((author, index) => (<span key={index}>{author}<br/></span>) \n\t\t\t)}</div>\n          </div>\n        )\n\t}\n}\n\nexport default BookCard"]},"metadata":{},"sourceType":"module"}